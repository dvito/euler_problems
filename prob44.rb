# Pentagonal numbers are generated by the formula, Pn=n(3n1)/2. The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70  22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk  Pj| is minimised; what is the value of D?
class Fixnum
  def pentagonal
    n=self
    pent = ((3*(n**2)) - n) / 2
    pent
  end
  def pentagonal?
    n = self
    test = (Math.sqrt(1.0 + (24.0 * n)) + 1.0) / 6.0
    return (test == test.to_i)
  end
end

notFound = true
n=1
result = 9999999
while notFound
  n+=1
  counter=n-1
  outerPent = n.pentagonal
  while counter>0
    innerPent = counter.pentagonal
    if (outerPent-innerPent).pentagonal? && (outerPent+innerPent).pentagonal?
      result = outerPent-innerPent
      notFound=false
    end
    counter-=1
  end
end
puts result
